// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorio;

namespace Repositorio.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Repositorio.Entidade.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dataagendamento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("unidadeAtendimentoId")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("vacinaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("unidadeAtendimentoId");

                    b.HasIndex("usuarioId");

                    b.HasIndex("vacinaId");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("Repositorio.Entidade.CarteiraVacina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Laboratório")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Lote")
                        .HasColumnType("int");

                    b.Property<string>("cidadaoCpf")
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("dtVacina")
                        .HasColumnType("datetime2");

                    b.Property<int?>("vacinaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cidadaoCpf");

                    b.HasIndex("vacinaId");

                    b.ToTable("CarteiraVacina");
                });

            modelBuilder.Entity("Repositorio.Entidade.Cidadao", b =>
                {
                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NomeMae")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Cpf");

                    b.ToTable("Cidadao");
                });

            modelBuilder.Entity("Repositorio.Entidade.UnidadeAtendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("UnidadeAtendimento");
                });

            modelBuilder.Entity("Repositorio.Entidade.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CidadaoCpf")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Senha")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CidadaoCpf");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Repositorio.Entidade.Vacina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vacina");
                });

            modelBuilder.Entity("Repositorio.Entidade.Agenda", b =>
                {
                    b.HasOne("Repositorio.Entidade.UnidadeAtendimento", "unidadeAtendimento")
                        .WithMany()
                        .HasForeignKey("unidadeAtendimentoId");

                    b.HasOne("Repositorio.Entidade.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioId");

                    b.HasOne("Repositorio.Entidade.Vacina", "vacina")
                        .WithMany()
                        .HasForeignKey("vacinaId");

                    b.Navigation("unidadeAtendimento");

                    b.Navigation("usuario");

                    b.Navigation("vacina");
                });

            modelBuilder.Entity("Repositorio.Entidade.CarteiraVacina", b =>
                {
                    b.HasOne("Repositorio.Entidade.Cidadao", "cidadao")
                        .WithMany()
                        .HasForeignKey("cidadaoCpf");

                    b.HasOne("Repositorio.Entidade.Vacina", "vacina")
                        .WithMany()
                        .HasForeignKey("vacinaId");

                    b.Navigation("cidadao");

                    b.Navigation("vacina");
                });

            modelBuilder.Entity("Repositorio.Entidade.Usuario", b =>
                {
                    b.HasOne("Repositorio.Entidade.Cidadao", "Cidadao")
                        .WithMany()
                        .HasForeignKey("CidadaoCpf");

                    b.Navigation("Cidadao");
                });
#pragma warning restore 612, 618
        }
    }
}
